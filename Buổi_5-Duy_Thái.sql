--c헧 1:
SELECT
    CO.CUSTOMER_ID,
    C.NAME,
    CO.FIRST_NAME,
    CO.LAST_NAME,
    CO.EMAIL,
    CO.PHONE,
    c.address,
    c.credit_limit,
    c.website
FROM CUSTOMERS C
JOIN CONTACTS CO
ON C.CUSTOMER_ID = CO.CUSTOMER_ID
WHERE c.address LIKE '%MI'

--C헧 2:
SELECT
    CO.CUSTOMER_ID,
    C.NAME,
    CO.FIRST_NAME,
    CO.LAST_NAME,
    CO.EMAIL,
    CO.PHONE,
    c.address,
    c.credit_limit,
    c.website
FROM CUSTOMERS C
JOIN CONTACTS CO
ON C.CUSTOMER_ID = CO.CUSTOMER_ID
WHERE C.CREDIT_LIMIT BETWEEN '500' AND '700' AND CO.PHONE LIKE '+39%'

--C헧 3:
SELECT
    CO.CUSTOMER_ID,
    C.NAME,
    CO.FIRST_NAME,
    CO.LAST_NAME,
    CO.EMAIL,
    CO.PHONE,
    c.address,
    c.credit_limit,
    c.website
FROM CUSTOMERS C
JOIN CONTACTS CO
ON C.CUSTOMER_ID = CO.CUSTOMER_ID
ORDER BY 
    C.CREDIT_LIMIT DESC
FETCH FIRST 10 ROWS ONLY;

--C헧 4: 
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    SUM(OI.QUANTITY*OI.UNIT_PRICE) AS TOTAL
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL

--C헧 5:
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    SUM(OI.QUANTITY*OI.UNIT_PRICE) AS TOTAL
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2017
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL DESC
FETCH FIRST 1 ROWS ONLY;

--C헧 6:
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    SUM(OI.QUANTITY*OI.UNIT_PRICE) AS TOTAL
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2017
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL
FETCH FIRST 1 ROWS ONLY;

--C헧 7:
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    AVG(OI.QUANTITY*OI.UNIT_PRICE) AS AVG_REVENUE
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY AVG_REVENUE DESC 
FETCH FIRST 10 ROWS ONLY;

--C헧 8
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    SUM(OI.QUANTITY*OI.UNIT_PRICE) AS TOTAL
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
WHERE o.status = 'Shipped'
    AND o.order_date > TO_DATE('01/01/2017','DD/MM/YYYY')
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL

--C헧 9
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    ROUND(SUM(oi.UNIT_PRICE * oi.QUANTITY), 1) AS TOTAL_REVENUE
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
WHERE o.status = 'Pending'
    AND o.order_date BETWEEN TO_DATE('01/01/2015','DD/MM/YYYY') AND TO_DATE('31/12/2015','DD/MM/YYYY')
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL_REVENUE

--C헧 10:
SELECT 
    C.CUSTOMER_ID,
    C.NAME,
    EXTRACT(YEAR FROM ORDER_DATE) AS YEAR_ORDER,
    EXTRACT(MONTH FROM ORDER_DATE)AS MONTH_ORDER,
    SUM(OI.QUANTITY*OI.UNIT_PRICE) AS TOTAL
FROM CUSTOMERS C
INNER JOIN  ORDERS O
ON C.CUSTOMER_ID=O.CUSTOMER_ID
INNER JOIN ORDER_ITEMS OI 
ON O.ORDER_ID=OI.ORDER_ID
GROUP BY C.CUSTOMER_ID, C.NAME, EXTRACT(YEAR FROM ORDER_DATE),EXTRACT(MONTH FROM ORDER_DATE)
ORDER BY C.NAME, YEAR_ORDER, MONTH_ORDER

--C헧 11:
SELECT 
    c.CUSTOMER_ID, 
    c.NAME, 
    EXTRACT(YEAR FROM o.ORDER_DATE) AS ORDER_YEAR,
    SUM(oi.UNIT_PRICE * oi.QUANTITY) AS TOTAL_CANCELED_VALUE,
    MAX(oi.UNIT_PRICE * oi.QUANTITY) AS MAX_CANCELED_ORDER,
    MIN(oi.UNIT_PRICE * oi.QUANTITY) AS MIN_CANCELED_ORDER
FROM 
    CUSTOMERS c
INNER JOIN 
    ORDERS o 
ON 
    c.CUSTOMER_ID = o.CUSTOMER_ID
INNER JOIN 
    ORDER_ITEMS oi 
ON 
    o.ORDER_ID = oi.ORDER_ID
WHERE 
    o.STATUS = 'Canceled'
GROUP BY 
    c.CUSTOMER_ID, 
    c.NAME, 
    EXTRACT(YEAR FROM o.ORDER_DATE)
ORDER BY 
    c.NAME, 
    ORDER_YEAR;





























































